name: 'Checkout'
description: 'Wrapper around actions/checkout'
inputs:
  repository:
    required: false
    description: 'Repository name with owner. For example, actions/checkout'
    default: ${{ github.repository }}
  ref:
    required: false
    description: >
      If in a pull request, checks out the pull request's HEAD SHA instead of a
      merge commit. Else, the usual behavior of actions/checkout is followed.
  token:
    required: false
    description: >
      Personal access token (PAT) used to fetch the repository. The PAT is configured
      with the local git config, which enables your scripts to run authenticated git
      commands. The post-job step removes the PAT.
      We recommend using a service account with the least permissions necessary.
      Also when generating a new PAT, select the least scopes necessary.
      [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
    default: ${{ github.token }}
  ssh-key:
    required: false
    description: >
      SSH key used to fetch the repository. The SSH key is configured with the local
      git config, which enables your scripts to run authenticated git commands.
      The post-job step removes the SSH key.
      We recommend using a service account with the least permissions necessary.
      [Learn more about creating and using
      encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
  ssh-known-hosts:
    required: false
    description: >
      Known hosts in addition to the user and global host key database. The public
      SSH keys for a host may be obtained using the utility `ssh-keyscan`. For example,
      `ssh-keyscan github.com`. The public key for github.com is always implicitly added.
  ssh-strict:
    required: false
    description: >
      Whether to perform strict host key checking. When true, adds the options `StrictHostKeyChecking=yes`
      and `CheckHostIP=no` to the SSH command line. Use the input `ssh-known-hosts` to
      configure additional hosts.
    default: 'true'
  persist-credentials:
    required: false
    description: 'Whether to configure the token or SSH key with the local git config'
    default: 'true'
  path:
    required: false
    description: 'Relative path under $GITHUB_WORKSPACE to place the repository'
  clean:
    required: false
    description: 'Whether to execute `git clean -ffdx && git reset --hard HEAD` before fetching'
    default: 'true'
  fetch-depth:
    required: false
    description: 'Number of commits to fetch. 0 indicates all history for all branches and tags.'
    default: '1'
  lfs:
    required: false
    description: 'Whether to download Git-LFS files'
    default: 'false'
  submodules:
    required: false
    description: >
      Whether to checkout submodules: `true` to checkout submodules or `recursive` to
      recursively checkout submodules.
      When the `ssh-key` input is not provided, SSH URLs beginning with `git@github.com:` are
      converted to HTTPS.
    default: 'false'

runs:
  using: "composite"
  steps:
    - if: ${{ github.event_name == 'pull_request' }}
      uses: actions/checkout@v2
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ github.event.pull_request.head.sha }}
        token: ${{ inputs.token }}
        ssh-key: ${{ inputs.ssh-key }}
        ssh-known-hosts: ${{ inputs.ssh-known-hosts }}
        ssh-strict: ${{ inputs.ssh-strict }}
        persist-credentials: ${{ inputs.persist-credentials }}
        path: ${{ inputs.path }}
        clean: ${{ inputs.clean }}
        fetch-depth: ${{ inputs.fetch-depth }}
        lfs: ${{ inputs.lfs }}
        submodules: ${{ inputs.submodules }}
    - if: ${{ github.event_name != 'pull_request' }}
      uses: actions/checkout@v2
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.ref }}
        token: ${{ inputs.token }}
        ssh-key: ${{ inputs.ssh-key }}
        ssh-known-hosts: ${{ inputs.ssh-known-hosts }}
        ssh-strict: ${{ inputs.ssh-strict }}
        persist-credentials: ${{ inputs.persist-credentials }}
        path: ${{ inputs.path }}
        clean: ${{ inputs.clean }}
        fetch-depth: ${{ inputs.fetch-depth }}
        lfs: ${{ inputs.lfs }}
        submodules: ${{ inputs.submodules }}


