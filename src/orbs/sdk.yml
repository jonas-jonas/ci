version: 2.1
description: Generates the Go SDK

executors:
  default:
    docker:
      -
        image: circleci/golang:1.13
        environment:
          - GO111MODULE=on

jobs:
  release:
    parameters:
      swagpath:
        description: Path to swagger file
        type: string
        default: docs/api.swagger.json
      gitemail:
        description: The git committer's email
        type: string
        default: aeneas@ory.sh
      gitusername:
        description: The git committer's username
        type: string
        default: aeneasr
      gittag:
        description: The git committer's username
        type: string
        default: aeneasr
      genpath:
        description: Where to generate the sdk to
        type: string
        default: internal/httpclient
      specargs:
        description: Additional "swagger genearte spec" arguments
        type: string
    executor: default
    steps:
      - checkout
      - run: |
          download_url=$(curl -s https://api.github.com/repos/go-swagger/go-swagger/releases/latest | \
            jq -r '.assets[] | select(.name | contains("'"$(uname | tr '[:upper:]' '[:lower:]')"'_amd64")) | .browser_download_url')
          sudo curl -o $GOPATH/bin/swagger -L'#' "$download_url"
          sudo chmod +x $GOPATH/bin/swagger
      - run: go get github.com/ory/sdk/swagutil@master
      - run: swagger generate spec -m -o <<parameters.swagpath>> -x <<parameters.genpath>> <<parameters.specargs>>
      - run: swagutil sanitize <<parameters.swagpath>>
      - run: swagger flatten --with-flatten=remove-unused -o <<parameters.swagpath>> <<parameters.swagpath>>
      - run: swagger validate <<parameters.swagpath>>
      - run: git config --global user.email "<<parameters.gitemail>>"
      - run: git config --global user.name "<<parameters.gitusername>>"
      - run: git clone git@github.com:ory/sdk.git ../sdk
      - run: |
          cp <<parameters.swagpath>> "../sdk/spec/${CIRCLE_PROJECT_REPONAME}/${CIRCLE_TAG}.json"
          (cd ../sdk; git add -A; git commit -a -m "Add spec for ${CIRCLE_PROJECT_REPONAME}:${CIRCLE_TAG}" || true; git push origin || true)

      - run: git clone git@github.com:ory/docs.git ../docs
      - run: |
          cp <<parameters.swagpath>> ../docs/apis/$CIRCLE_PROJECT_REPONAME.json
          (cd ../docs; git add -A; git commit -a -m "$CIRCLE_PROJECT_REPONAME: Update API Swagger definitions" || true; git push origin || true)

  generate:
    parameters:
      swagpath:
        description: Path to swagger file
        type: string
        default: docs/api.swagger.json
      genpath:
        description: Where to generate the sdk to
        type: string
        default: internal/httpclient
      gitemail:
        description: The git committer's email
        type: string
        default: aeneas@ory.sh
      gitusername:
        description: The git committer's username
        type: string
        default: aeneasr
      appname:
        description: The application name for example Ory_Hydra
        type: string
      commitmessage:
        description: The git commit message
        type: string
        default: "chore: Regenerate swagger spec and internal client"
      specargs:
        description: Additional "swagger genearte spec" arguments
        type: string
    executor: default
    steps:
      - run: |
          download_url=$(curl -s https://api.github.com/repos/go-swagger/go-swagger/releases/latest | \
            jq -r '.assets[] | select(.name | contains("'"$(uname | tr '[:upper:]' '[:lower:]')"'_amd64")) | .browser_download_url')
          sudo curl -o $GOPATH/bin/swagger -L'#' "$download_url"
          sudo chmod +x $GOPATH/bin/swagger
      - run: go get github.com/sqs/goreturns@master github.com/ory/sdk/swagutil@master
      - checkout
      - run: |
          if [ "$(git show -s --format=%B | head -n 1)" = "<<parameters.commitmessage>>" ]; then
            circleci-agent step halt
          fi
      - run: swagger generate spec -m -o <<parameters.swagpath>> -x <<parameters.genpath>> <<parameters.specargs>>
      - run: swagutil sanitize <<parameters.swagpath>>
      - run: swagger flatten --with-flatten=remove-unused -o ./docs/api.swagger.json ./docs/api.swagger.json
      - run: swagger validate <<parameters.swagpath>>
      - run: rm -rf <<parameters.genpath>>
      - run: mkdir -p <<parameters.genpath>>
      - run: swagger generate client -f <<parameters.swagpath>> -t <<parameters.genpath>> -A <<parameters.appname>>
      - run: git config --global user.email "<<parameters.gitemail>>"
      - run: git config --global user.name "<<parameters.gitusername>>"
      - run: git add -A
      - run: |
          (git commit -m "<<parameters.commitmessage>>" -a && git push origin HEAD:$CIRCLE_BRANCH) || true

examples:
  sdk:
    description: Generate and commit the SDK
    usage:
      version: 2.1
      orbs:
        foo: ory/sdk@0.0.0
      workflows:
        release:
          jobs:
            - sdk/publish
        generate:
          jobs:
            - sdk/release:
                appname: Ory_Hydra
